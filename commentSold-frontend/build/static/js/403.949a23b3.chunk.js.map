{"version":3,"file":"static/js/403.949a23b3.chunk.js","mappings":"kRAyEA,EA9Da,SAAC,GAAD,IACXA,EADW,EACXA,oBAAqBC,EADV,EACUA,gBAAiBC,EAD3B,EAC2BA,OAAQC,EADnC,EACmCA,SAAUC,EAD7C,EAC6CA,OAAQC,EADrD,EACqDA,WADrD,OAGX,SAACC,EAAA,EAAD,CAAa,cAAY,eAAeC,UAAU,mBAAlD,UACE,SAAC,KAAD,CACEC,cAAeR,EACfS,oBAAkB,EAClBN,SAAUA,EACVO,SAAUT,EAJZ,SAMG,gBACCU,EADD,EACCA,OAAQC,EADT,EACSA,OAAQC,EADjB,EACiBA,QAASC,EAD1B,EAC0BA,aAAcC,EADxC,EACwCA,WAAYC,EADpD,EACoDA,aAAcC,EADlE,EACkEA,cADlE,OAGC,kBAAMV,UAAU,WAAWG,SAAUM,EAArC,UACGZ,EAAOc,KAAI,SAACC,GAAD,MAA2B,WAAfA,EAAMC,MAC5B,UAAC,EAAAC,SAAD,YACE,SAACC,EAAA,EAAD,CACEf,UAAU,aACVgB,WAAS,EACTC,MAAOL,EAAMK,MACbC,QAAQ,WACRL,KAAMD,EAAMC,KACZM,KAAMP,EAAMO,KACZC,SAAUb,EACVc,OAAQb,EACRc,MAAOlB,EAAOQ,EAAMO,SAEtB,SAACI,EAAA,EAAD,CAAYvB,UAAU,kBAAtB,SACGK,EAAOO,EAAMO,OAASb,EAAQM,EAAMO,OAASd,EAAOO,EAAMO,UAbhDP,EAAMO,OAiBrB,UAAC,EAAAL,SAAD,YACE,SAACU,EAAA,EAAD,CAAKxB,UAAU,mBAAf,UACE,SAAC,KAAD,CACEyB,SAAU,SAACH,GAAD,OAAWZ,EAAcE,EAAMO,KAAMG,EAArC,EACVI,cAAe5B,EAAWc,EAAMO,MAAMQ,QACtCC,YAAa9B,EAAWc,EAAMO,MAAMU,YACpCP,MAAOlB,EAAOQ,EAAMO,WAGxB,SAACI,EAAA,EAAD,CAAYvB,UAAU,kBAAtB,SACGK,EAAOO,EAAMO,OAASb,EAAQM,EAAMO,OAASd,EAAOO,EAAMO,UAVhDP,EAAMO,KAlBX,KAiCZ,SAACW,EAAA,EAAD,CACE9B,UAAU,gBACVa,KAAK,SACLkB,WAAWC,EAAAA,EAAAA,SAAQ3B,GACnBa,QAAQ,YACRe,KAAK,QALP,SAOGtC,MA5CN,KAVM,C","sources":["components/Form/index.jsx"],"sourcesContent":["import Box from '@mui/material/Box'\nimport {\n  Button, CardContent, TextField, Typography,\n} from '@mui/material'\nimport { Fragment } from 'react'\nimport { Formik } from 'formik'\nimport { isEmpty } from 'lodash'\n\nimport './styles.scss'\nimport { Select } from 'components'\n\nconst Form = ({\n  fieldsInitialValues, handleSubmition, action, validate, fields, selectList,\n}) => (\n  <CardContent data-testid='content-form' className='mat-card-content'>\n    <Formik\n      initialValues={fieldsInitialValues}\n      enableReinitialize\n      validate={validate}\n      onSubmit={handleSubmition}\n    >\n      {({\n        values, errors, touched, handleChange, handleBlur, handleSubmit, setFieldValue,\n      }) => (\n        <form className='mat-form' onSubmit={handleSubmit}>\n          {fields.map((field) => (field.type !== 'select' ? (\n            <Fragment key={field.name}>\n              <TextField\n                className='text-field'\n                fullWidth\n                label={field.label}\n                variant='outlined'\n                type={field.type}\n                name={field.name}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values[field.name]}\n              />\n              <Typography className='warn-typography'>\n                {errors[field.name] && touched[field.name] && errors[field.name]}\n              </Typography>\n            </Fragment>\n          ) : (\n            <Fragment key={field.name}>\n              <Box className='product-dropdown'>\n                <Select\n                  setValue={(value) => setFieldValue(field.name, value)}\n                  selectOptions={selectList[field.name].options}\n                  placeHolder={selectList[field.name].placeholder}\n                  value={values[field.name]}\n                />\n              </Box>\n              <Typography className='warn-typography'>\n                {errors[field.name] && touched[field.name] && errors[field.name]}\n              </Typography>\n            </Fragment>\n          )))}\n\n          <Button\n            className='submit-button'\n            type='submit'\n            disabled={!isEmpty(errors)}\n            variant='contained'\n            size='large'\n          >\n            {action}\n          </Button>\n        </form>\n      )}\n    </Formik>\n  </CardContent>\n)\n\nexport default Form\n"],"names":["fieldsInitialValues","handleSubmition","action","validate","fields","selectList","CardContent","className","initialValues","enableReinitialize","onSubmit","values","errors","touched","handleChange","handleBlur","handleSubmit","setFieldValue","map","field","type","Fragment","TextField","fullWidth","label","variant","name","onChange","onBlur","value","Typography","Box","setValue","selectOptions","options","placeHolder","placeholder","Button","disabled","isEmpty","size"],"sourceRoot":""}